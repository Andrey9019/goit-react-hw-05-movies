{"version":3,"file":"static/js/46.3c13d2c2.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Form/Form.styled.js","components/Form/Form.js","pages/Movies.js","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 15px;\n  padding: 0;\n  list-style: none;\n  margin: 0;\n`;\n\nexport const ListItem = styled.li`\n  position: relative;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);\n  overflow: hidden;\n  transition: all 250ms ease;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.6);\n    transform: scale(1.03);\n  }\n`;\n\nexport const Title = styled.p`\n  padding: 16px;\n  font-size: 20px;\n  color: white;\n  font-weight: 500;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: rgba(0, 0, 0, 0.4);\n  transition: all 250ms ease;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  box-sizing: border-box;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  transition: transform 0.2s ease-in-out;\n\n  ${ListItem}:hover & {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Link = styled.a`\n  display: block;\n  text-decoration: none;\n  color: inherit;\n`;\n\nexport const Section = styled.section`\n  text-align: center;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, Title, Image, Section } from './MoviesList.styled';\n\nconst defaultImg =\n  'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\nconst posterBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Section>\n      <>\n        <List>\n          {movies.map(({ id, title, poster_path }) => (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Image\n                  src={\n                    poster_path ? `${posterBaseURL}${poster_path}` : defaultImg\n                  }\n                  alt={title}\n                  width=\"200\"\n                />\n                <Title>{title}</Title>\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </>\n    </Section>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: flex;\n  width: 300px;\n  overflow: hidden;\n  border: none;\n  height: 40px;\n  outline: none;\n  padding: 5px 8px;\n  margin-bottom: 40px;\n  align-items: center;\n  font-size: 16px;\n`;\nexport const ContainerForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const Container = styled.div`\n  background-color: #333;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-size: 22px;\n  font-weight: 500;\n  color: white;\n  gap: 10px;\n  align-items: baseline;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const SubmitBtn = styled.button`\n  border: none;\n  height: 50px;\n  width: 50px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 40px;\n  padding: 10px;\n`;\n","import React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { HiMiniMagnifyingGlass } from 'react-icons/hi2';\nimport {\n  Container,\n  ContainerForm,\n  Label,\n  SubmitBtn,\n  InputContainer,\n  Input,\n} from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const inputValue = value.toLowerCase();\n    onSubmit(inputValue);\n    if (!inputValue.trim()) {\n      toast.error('Please enter something!');\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <ContainerForm onSubmit={onFormSubmit}>\n        <InputContainer>\n          <Label>\n            Search by movie\n            <Input\n              type=\"text\"\n              name=\"query\"\n              value={value}\n              autoFocus\n              onChange={event => setValue(event.target.value)}\n              placeholder=\"Enter movie\"\n            />\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <HiMiniMagnifyingGlass\n              style={{\n                width: '20px',\n                height: '20px',\n              }}\n            />\n          </SubmitBtn>\n        </InputContainer>\n      </ContainerForm>\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default Form;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMoviesByQuery } from '../utils/Api';\nimport Form from '../components/Form/Form';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (!query) {\n      return;\n    }\n    async function getMoviesPage() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchMoviesPage = await fetchMoviesByQuery(query, {\n          signal: controller.signal,\n        });\n\n        setMovies(fetchMoviesPage.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesPage();\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  const onSubmit = value => {\n    if (query === value) {\n      return toast.info('Nothing found, please try something else');\n    }\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Oops, something went wrong. Try reloading the page`)}\n      <Form onSubmit={onSubmit} />\n      {movies.length === 0 && <p>No results</p>}\n      <MoviesList movies={movies} />\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Title","_templateObject3","Image","_templateObject4","Section","_templateObject5","_templateObject6","_ref","movies","location","useLocation","_jsx","children","_Fragment","map","_ref2","id","title","poster_path","_jsxs","Link","to","concat","state","from","src","alt","width","Input","ContainerForm","Container","Label","InputContainer","SubmitBtn","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","event","preventDefault","inputValue","toLowerCase","trim","toast","type","name","autoFocus","onChange","target","placeholder","HiMiniMagnifyingGlass","style","height","ToastContainer","autoClose","theme","_searchParams$get","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","query","get","useEffect","controller","AbortController","_getMoviesPage","apply","arguments","getMoviesPage","abort","_asyncToGenerator","_regeneratorRuntime","_callee","fetchMoviesPage","_context","prev","next","fetchMoviesByQuery","signal","sent","results","t0","code","finish","stop","Loader","Form","length","MoviesList","API_KEY","axios","key","fetchTrandingMovies","params","response","_args","undefined","abrupt","data","fetchMoviesById","_callee2","movieId","_args2","_context2","_x","_ref3","_callee3","_args3","_context3","_x2","fetchReview","_ref4","_callee4","_args4","_context4","_x3","fetchCast","_ref5","_callee5","_args5","_context5","_x4"],"sourceRoot":""}