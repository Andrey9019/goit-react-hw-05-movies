{"version":3,"file":"static/js/90.4e202ac0.chunk.js","mappings":"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","sources":["components/Cast/CastCard.jsx","components/Cast/Cast.jsx","utils/Api.js"],"sourcesContent":["const CastCard = ({ actor }) => {\n  const { name, character, profile_path } = actor;\n  const posterBasePath = 'https://image.tmdb.org/t/p/w500';\n  const defaultImg =\n    'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\n\n  return (\n    <div className=\"flex flex-col items-center bg-gray-300  p-4 lg:p-6 rounded-lg custom-shadow-card\">\n      <img\n        src={profile_path ? `${posterBasePath}${profile_path}` : defaultImg}\n        alt={name}\n        className=\"w-28 h-28 rounded-3xl mb-4 object-cover\"\n      />\n      <h3 className=\"text-lg lg:text-xl font-bold mb-2\">{name}</h3>\n      <p className=\"text-sm lg:text-lg\">Character: {character}</p>\n    </div>\n  );\n};\n\nexport default CastCard;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../../utils/Api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CastCard from './CastCard';\nimport Loader from '../Loader/Loader';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getCast() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedCast = await fetchCast(movieId, {\n          signal: controller.signal,\n        });\n\n        setCast(fetchedCast.cast);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCast();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div className=\"py-8\">\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Whoops, something went wrong. Try reloading the page`)}\n      {cast.length > 0 ? (\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-3 lg:grid-cols-4 gap-6 p-2\">\n          {cast.map(actor => (\n            <CastCard key={actor.id} actor={actor} />\n          ))}\n        </div>\n      ) : (\n        <p className=\"text-center text-lg mt-5\">\n          No information about the actors in this movie 😕\n        </p>\n      )}\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["_ref","actor","name","character","profile_path","_jsxs","className","children","_jsx","src","alt","Cast","loading","setLoading","useState","error","setError","cast","setCast","movieId","useParams","useEffect","controller","AbortController","async","fetchedCast","fetchCast","signal","code","getCast","abort","Loader","toast","length","map","CastCard","id","ToastContainer","autoClose","theme","API_KEY","axios","key","fetchTrandingMovies","params","arguments","undefined","response","data","fetchMoviesById","fetchMoviesByQuery","value","fetchReview"],"sourceRoot":""}