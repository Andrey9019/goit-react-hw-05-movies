{"version":3,"file":"static/js/953.0631dd95.chunk.js","mappings":"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","sources":["components/Review/Review.styled.js","components/Review/Review.js","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #333;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\nexport const Author = styled.h3`\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p`\n  color: white;\n  font-size: 16px;\n`;\nexport const Item = styled.li`\n  margin: 10px 0;\n  padding: 10px;\n  background-color: #444;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 5px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchReview } from '../../utils/Api';\nimport { Container, Author, Text, List, Item } from './Review.styled';\nimport Loader from '../Loader/Loader';\n\nconst Review = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReview] = useState([]);\n  console.log(reviews);\n\n  const { movieId } = useParams();\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getReview() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedReview = await fetchReview(movieId, {\n          signal: controller.signal,\n        });\n\n        setReview(fetchedReview.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getReview();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Whoops, something went wrong. Try reloading the page`)}\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(review => {\n            const { content, author } = review;\n            return (\n              <Item key={author}>\n                <Author>{author}</Author>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </List>\n      ) : (\n        <Text>There is no review for this movie</Text>\n      )}\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["Container","styled","List","Author","Text","Item","Review","loading","setLoading","useState","error","setError","reviews","setReview","console","log","movieId","useParams","useEffect","controller","AbortController","async","fetchedReview","fetchReview","signal","results","code","getReview","abort","_jsxs","children","_jsx","Loader","toast","length","map","review","content","author","ToastContainer","autoClose","theme","API_KEY","axios","key","fetchTrandingMovies","params","arguments","undefined","response","data","fetchMoviesById","fetchMoviesByQuery","value","fetchCast"],"sourceRoot":""}