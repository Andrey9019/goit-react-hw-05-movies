{"version":3,"file":"static/js/802.553a154f.chunk.js","mappings":"+NAOA,MA6DA,EA7DeA,KACb,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAASC,IAAaJ,EAAAA,EAAAA,UAAS,KAEhC,QAAEK,IAAYC,EAAAA,EAAAA,MA4BpB,OA1BAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAa,IAAIC,gBAoBvB,OAlBAC,iBACE,IACEX,GAAW,GACXG,GAAS,GACT,MAAMS,QAAsBC,EAAAA,EAAAA,IAAYP,EAAS,CAC/CQ,OAAQL,EAAWK,SAGrBT,EAAUO,EAAcG,QAO1B,CANE,MAAOb,GACY,iBAAfA,EAAMc,MACRb,GAAS,EAEb,CAAC,QACCH,GAAW,EACb,CACF,CACAiB,GACO,KACLR,EAAWS,OAAO,CACnB,GACA,CAACZ,KAGFa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoEC,SAAA,CAChFtB,IAAWuB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAClBrB,GACCsB,EAAAA,GAAAA,MAAa,wDACdpB,EAAQqB,OAAS,GAChBH,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAmBC,SAC9BjB,EAAQsB,KAAIC,IACX,MAAM,QAAEC,EAAO,OAAEC,GAAWF,EAC5B,OACER,EAAAA,EAAAA,MAAA,MAEEC,UAAU,4CAA2CC,SAAA,EAErDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4BAA2BC,SAAEQ,KAC3CP,EAAAA,EAAAA,KAAA,KAAGF,UAAU,sBAAqBC,SAAEO,MAJ/BC,EAKF,OAKXP,EAAAA,EAAAA,KAAA,KAAGF,UAAU,WAAUC,SAAC,uCAE1BC,EAAAA,EAAAA,KAACQ,EAAAA,GAAc,CAACC,UAAW,IAAMC,MAAM,cACnC,C,iFC9DV,MAAMC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,IAAKF,GAKA,MAAMG,EAAsBzB,iBAAwB,IAAjB0B,EAAMC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClD,MAAME,QAAiBN,EAAAA,EAAAA,IACpB,+BAA8BD,IAC/BI,GAEF,OAAOG,EAASC,IAClB,EAIaC,EAAkB/B,eAAOL,GAA0B,IAAjB+B,EAAMC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAME,QAAiBN,EAAAA,EAAAA,IACpB,UAAS5B,aAAmB2B,IAC7BI,GAEF,OAAOG,EAASC,IAClB,EAIaE,EAAqBhC,eAAOiC,GAAwB,IAAjBP,EAAMC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxD,MAAME,QAAiBN,EAAAA,EAAAA,IACpB,uBAAsBU,aAAiBX,IACxCI,GAEF,OAAOG,EAASC,IAClB,EAIa5B,EAAcF,eAAOL,GAA0B,IAAjB+B,EAAMC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnD,MAAME,QAAiBN,EAAAA,EAAAA,IACpB,UAAS5B,qBAA2B2B,IACrCI,GAEF,OAAOG,EAASC,IAClB,EAIaI,EAAYlC,eAAOL,GAA0B,IAAjB+B,EAAMC,UAAAb,OAAA,QAAAc,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAME,QAAiBN,EAAAA,EAAAA,IACpB,UAAS5B,qBAA2B2B,IACrCI,GAEF,OAAOG,EAASC,IAClB,C","sources":["components/Review/Review.jsx","utils/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchReview } from '../../utils/Api';\nimport Loader from '../Loader/Loader';\n\nconst Review = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReview] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getReview() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchedReview = await fetchReview(movieId, {\n          signal: controller.signal,\n        });\n\n        setReview(fetchedReview.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getReview();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <div className=\"max-w-screen-lg mx-auto mb-24 p-5 bg-gray-400 shadow-lg rounded-md\">\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Whoops, something went wrong. Try reloading the page`)}\n      {reviews.length > 0 ? (\n        <ul className=\"list-none p-0 m-0\">\n          {reviews.map(review => {\n            const { content, author } = review;\n            return (\n              <li\n                key={author}\n                className=\"my-3 p-4 bg-gray-300 shadow-md rounded-md\"\n              >\n                <h3 className=\"font-bold mb-1 lg:text-xl\">{author}</h3>\n                <p className=\" text-sm lg:text-lg\">{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p className=\" text-lg\">There is no review for this movie</p>\n      )}\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </div>\n  );\n};\n\nexport default Review;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["Review","loading","setLoading","useState","error","setError","reviews","setReview","movieId","useParams","useEffect","controller","AbortController","async","fetchedReview","fetchReview","signal","results","code","getReview","abort","_jsxs","className","children","_jsx","Loader","toast","length","map","review","content","author","ToastContainer","autoClose","theme","API_KEY","axios","key","fetchTrandingMovies","params","arguments","undefined","response","data","fetchMoviesById","fetchMoviesByQuery","value","fetchCast"],"sourceRoot":""}