{"version":3,"file":"static/js/463.8abbbc27.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/Form/Form.styled.js","components/Form/Form.js","pages/Movies.js","utils/Api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\nconst posterBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst genreNames = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  10751: 'Family',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  27: 'Horror',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <section className=\"container\">\n      <ul className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-[repeat(auto-fill,minmax(200px,1fr))] gap-4 p-3 list-none m-0\">\n        {movies.map(({ id, title, poster_path, vote_average, genre_ids }) => {\n          // Отримуємо назви жанрів, відображаємо максимум 3\n          const allGenres = genre_ids\n            .map(id => genreNames[id])\n            .filter(Boolean) // Видаляємо undefined значення\n            .slice(0, 3) // Беремо перші три жанри\n            .join(', ');\n\n          return (\n            <li\n              key={id}\n              className=\"relative rounded-md shadow-[0_2px_4px_rgba(0,0,0,0.3)] overflow-hidden transition-all duration-300 ease-in-out hover:shadow-[0_6px_8px_rgba(0,0,0,0.6)] hover:scale-105\"\n            >\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className=\" text-inherit no-underline\"\n              >\n                <img\n                  src={\n                    poster_path ? `${posterBaseURL}${poster_path}` : defaultImg\n                  }\n                  alt={title}\n                  width=\"200\"\n                  className=\"object-cover w-full \"\n                />\n                <div className=\"p-1 font-normal text-gray-700\">\n                  <p className=\"text-sm font-medium mb-1 md:text-lg lg:text-xl md:font-semibold\">\n                    {title}\n                  </p>\n                  {vote_average > 0 && (\n                    <p className=\"text-xs md:text-base lg:text-lg md:font-normal\">\n                      Rating: {vote_average.toFixed(1)}\n                    </p>\n                  )}\n                  {allGenres && (\n                    <p className=\"text-xs md:text-sm lg:text-base md:font-normal\">\n                      Genres: {allGenres}\n                    </p>\n                  )}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: flex;\n  width: 300px;\n  overflow: hidden;\n  border: none;\n  height: 40px;\n  outline: none;\n  padding: 5px 8px;\n  margin-bottom: 40px;\n  align-items: center;\n  font-size: 16px;\n`;\nexport const ContainerForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const Container = styled.div`\n  background-color: #333;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  font-size: 22px;\n  font-weight: 500;\n  color: white;\n  gap: 10px;\n  align-items: baseline;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const SubmitBtn = styled.button`\n  border: none;\n  height: 50px;\n  width: 50px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 40px;\n  padding: 10px;\n`;\n","import React, { useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { HiMiniMagnifyingGlass } from 'react-icons/hi2';\nimport {\n  Container,\n  ContainerForm,\n  Label,\n  SubmitBtn,\n  InputContainer,\n  Input,\n} from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const inputValue = value.toLowerCase();\n    onSubmit(inputValue);\n    if (!inputValue.trim()) {\n      toast.error('Please enter something!');\n      return;\n    }\n  };\n\n  return (\n    <Container>\n      <ContainerForm onSubmit={onFormSubmit}>\n        <InputContainer>\n          <Label>\n            Search by movie\n            <Input\n              type=\"text\"\n              name=\"query\"\n              value={value}\n              autoFocus\n              onChange={event => setValue(event.target.value)}\n              placeholder=\"Enter movie\"\n            />\n          </Label>\n          <SubmitBtn type=\"submit\">\n            <HiMiniMagnifyingGlass\n              style={{\n                width: '20px',\n                height: '20px',\n              }}\n            />\n          </SubmitBtn>\n        </InputContainer>\n      </ContainerForm>\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default Form;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMoviesByQuery } from '../utils/Api';\nimport Form from '../components/Form/Form';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (!query) {\n      return;\n    }\n    async function getMoviesPage() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchMoviesPage = await fetchMoviesByQuery(query, {\n          signal: controller.signal,\n        });\n\n        setMovies(fetchMoviesPage.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesPage();\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  const onSubmit = value => {\n    if (query === value) {\n      return toast.info('Nothing found, please try something else');\n    }\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Oops, something went wrong. Try reloading the page`)}\n      <Form onSubmit={onSubmit} />\n      {movies.length === 0 && <p>No results</p>}\n      <MoviesList movies={movies} />\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["genreNames","_ref","movies","location","useLocation","_jsx","className","children","map","_ref2","id","title","poster_path","vote_average","genre_ids","allGenres","filter","Boolean","slice","join","_jsxs","Link","to","state","from","src","alt","width","toFixed","Input","styled","ContainerForm","Container","Label","InputContainer","SubmitBtn","onSubmit","value","setValue","useState","event","preventDefault","inputValue","toLowerCase","trim","toast","type","name","autoFocus","onChange","target","placeholder","HiMiniMagnifyingGlass","style","height","ToastContainer","autoClose","theme","Movies","_searchParams$get","setMovies","searchParams","setSearchParams","useSearchParams","loading","setLoading","error","setError","query","get","useEffect","controller","AbortController","async","fetchMoviesPage","fetchMoviesByQuery","signal","results","code","getMoviesPage","abort","Loader","Form","length","MoviesList","API_KEY","axios","key","fetchTrandingMovies","params","arguments","undefined","response","data","fetchMoviesById","movieId","fetchReview","fetchCast"],"sourceRoot":""}