{"version":3,"file":"static/js/234.e635216c.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/MovieDetailsCard/MovieDetailsCard.styled.js","components/MovieDetailsCard/MovieDeatailsCard.js","pages/MovieDetails.js","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GoBackBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px 20px;\n  text-decoration: none;\n  color: white;\n  background-color: #555;\n  font-size: 24px;\n  transition: all 250ms ease;\n  border: none;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  margin-top: 5px;\n\n  &:hover {\n    color: #ff5733;\n    background-color: transparent;\n    transform: scale(1);\n    background-color: #444;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { GoBackBtn } from './BackLink.styled';\nimport { HiOutlineChevronDoubleLeft } from 'react-icons/hi';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <>\n      <Link to={to}>\n        <GoBackBtn>\n          <HiOutlineChevronDoubleLeft\n            style={{\n              width: '25px',\n              height: '25px',\n            }}\n          />\n          Go back\n        </GoBackBtn>\n        {children}\n      </Link>\n    </>\n  );\n};\nexport default BackLink;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  width: 1000px;\n  display: flex;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 4px;\n  gap: 20px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 400px;\n  height: auto;\n  border-radius: 5px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    max-width: 300px;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: center;\n  gap: 20px;\n\n  @media (max-width: 768px) {\n    align-items: center;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: white;\n  font-size: 30px;\n  font-weight: bold;\n  margin: 0;\n\n  @media (max-width: 768px) {\n    font-size: 20px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n  align-items: center;\n`;\n\nexport const Description = styled.h3`\n  color: #555333;\n  font-size: 25px;\n`;\n\nexport const Info = styled.p`\n  color: white;\n  font-size: 18px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  width: 1000px;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const NewLink = styled(Link)`\n  font-size: 30px;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 5px 30px;\n  color: white;\n  cursor: pointer;\n  transition: all 250ms ease;\n  text-decoration: none;\n  font-weight: 600;\n\n  &:hover {\n    color: #ff5733;\n    border: 1px solid #ff5733;\n  }\n`;\n","import {\n  Container,\n  InfoContainer,\n  Title,\n  ListItem,\n  Description,\n  Info,\n  Image,\n  AdditionalInfo,\n  InfoList,\n  NewLink,\n} from './MovieDetailsCard.styled';\n\nconst MovieDetailsCard = ({ movies }) => {\n  const { title, poster_path, vote_average, overview, genres } = movies;\n  const allGenres = genres ? genres.map(genre => genre.name).join(', ') : [];\n  const defaultImg =\n    'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\n  const posterBasePath = 'https://image.tmdb.org/t/p/w500';\n  return (\n    <>\n      <Container>\n        <Image\n          src={poster_path ? `${posterBasePath}${poster_path}` : defaultImg}\n          alt={title}\n          width=\"400\"\n        />\n        <InfoContainer>\n          <Title>Title: {title}</Title>\n          <ul>\n            <ListItem>\n              <Description>User score:</Description>\n              <Info>{Math.round(vote_average * 10)}%</Info>\n            </ListItem>\n            <ListItem>\n              <Description>Overview</Description>\n              <Info>{overview !== '' ? overview : 'No overview provided'}</Info>\n            </ListItem>\n            <ListItem>\n              <Description>Genres</Description>\n              <Info>{allGenres !== '' ? allGenres : 'No genres provided'}</Info>\n            </ListItem>\n          </ul>\n        </InfoContainer>\n      </Container>\n      <AdditionalInfo>\n        <InfoList>\n          <li>\n            <NewLink to=\"cast\">Cast</NewLink>\n          </li>\n          <li>\n            <NewLink to=\"review\">Review</NewLink>\n          </li>\n        </InfoList>\n      </AdditionalInfo>\n    </>\n  );\n};\n\nexport default MovieDetailsCard;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport React, { useEffect, useState, Suspense, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { fetchMoviesById } from '../utils/Api';\nimport Loader from '../components/Loader/Loader';\nimport BackLink from 'components/BackLink/BackLink';\nimport MovieDetailsCard from 'components/MovieDetailsCard/MovieDeatailsCard';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/Movies');\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getMovieById() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movieById = await fetchMoviesById(movieId, {\n          signal: controller.signal,\n        });\n        setMovies(movieById);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovieById();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <main>\n      <div>\n        {loading && <Loader />}\n        {error &&\n          toast.error(`Oops, something went wrong. Try reloading the page`)}\n        <BackLink to={backLinkHref.current} />\n        {movies && <MovieDetailsCard movies={movies} />}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <ToastContainer autoClose={4000} theme=\"colored\" />\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["GoBackBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","to","children","_jsx","_Fragment","_jsxs","Link","HiOutlineChevronDoubleLeft","style","width","height","Container","Image","_templateObject2","InfoContainer","_templateObject3","Title","_templateObject4","ListItem","_templateObject5","Description","_templateObject6","Info","_templateObject7","AdditionalInfo","_templateObject8","InfoList","_templateObject9","NewLink","_templateObject10","movies","title","poster_path","vote_average","overview","genres","allGenres","map","genre","name","join","src","concat","alt","Math","round","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","controller","AbortController","_getMovieById","_asyncToGenerator","_regeneratorRuntime","_callee","movieById","_context","prev","next","fetchMoviesById","signal","sent","t0","code","finish","stop","apply","arguments","getMovieById","abort","Loader","toast","BackLink","current","MovieDetailsCard","Suspense","fallback","Outlet","ToastContainer","autoClose","theme","API_KEY","axios","key","fetchTrandingMovies","params","response","_args","length","undefined","abrupt","data","_ref2","_callee2","_args2","_context2","_x","fetchMoviesByQuery","_ref3","_callee3","value","_args3","_context3","_x2","fetchReview","_ref4","_callee4","_args4","_context4","_x3","fetchCast","_ref5","_callee5","_args5","_context5","_x4"],"sourceRoot":""}