{"version":3,"file":"static/js/951.f3a2189a.chunk.js","mappings":"yPAYA,MAAMA,EAAmBC,GACT,IAAVA,GAAwB,MAATA,EAAsB,KACrCA,GAAS,IAAWC,EAAAA,EAAAA,KAACC,EAAAA,IAAW,CAACC,UAAU,mBAC3CH,GAAS,IAAWC,EAAAA,EAAAA,KAACG,EAAAA,IAAO,CAACD,UAAU,mBACvCH,GAAS,IAAWC,EAAAA,EAAAA,KAACI,EAAAA,IAAK,CAACF,UAAU,oBACrCH,GAAS,IAAWC,EAAAA,EAAAA,KAACK,EAAAA,IAAO,CAACH,UAAU,qBACpCF,EAAAA,EAAAA,KAACM,EAAAA,IAAS,CAACJ,UAAU,iBA0F9B,EAvFyBK,IAAiB,IAAhB,OAAEC,GAAQD,EAClC,MAAM,MAAEE,EAAK,YAAEC,EAAW,aAAEC,EAAY,SAAEC,EAAQ,OAAEC,EAAM,aAAEC,GAC1DN,EACIO,EAAYF,EAASA,EAAOG,KAAIC,GAASA,EAAMC,OAAMC,KAAK,MAAQ,GAMlEpB,EAAQqB,KAAKC,MAAqB,GAAfV,GAKzB,OACEW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,gEAA+DsB,SAAA,EAC5ExB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,sBAAqBsB,UAClCxB,EAAAA,EAAAA,KAAA,OACEyB,IAAKf,EAAe,kCAAmBA,IAR/C,qJASQgB,IAAKjB,EACLP,UAAU,8DAGdoB,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,8DAA6DsB,SAAA,EAC1ExB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,6CAA4CsB,SACvDf,KAEHa,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,0CAAyCsB,SAAA,EACrDF,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,+DAA8DsB,SAAA,EAC1ExB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,sBAAqBsB,SAAC,iBACpCxB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAAqBsB,SAC/BzB,EAAQ,EAAK,GAAEA,KAAW,mBAE7BC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAAqBsB,SAAE1B,EAAiBC,SAEvDuB,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,mDAAkDsB,SAAA,EAC9DxB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iCAAgCsB,SAAC,8BAG/CxB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAAqBsB,SAClB,KAAbZ,EAAkBA,EAAW,6BAGlCU,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,kDAAiDsB,SAAA,EAC7DxB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,iCAAgCsB,SAAC,aAC/CxB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,uBAAsBsB,SAClB,KAAdT,EAAmBA,EAAY,2BAGpCO,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,mCAAkCsB,SAAA,EAC9CxB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,gCAA+BsB,SAAC,mBAC9CxB,EAAAA,EAAAA,KAAA,KAAGE,UAAU,sBAAqBsB,SAC/BV,GAjDIa,EAkDUb,EAjDd,IAAIc,KAAKD,GAEVE,mBAAmB,QADf,CAAEC,IAAK,UAAWC,MAAO,OAAQC,KAAM,aAiDvC,2BAEF,cAIZhC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8BAA6BsB,UAC1CF,EAAAA,EAAAA,MAAA,MAAIpB,UAAU,iCAAgCsB,SAAA,EAC5CxB,EAAAA,EAAAA,KAAA,MAAAwB,UACEF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CACHC,GAAG,OACHhC,UAAU,yMAAwMsB,SAAA,EAElNxB,EAAAA,EAAAA,KAACmC,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OACvBrC,EAAAA,EAAAA,KAAA,QAAAwB,SAAM,eAGVxB,EAAAA,EAAAA,KAAA,MAAAwB,UACEF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CACHC,GAAG,SACHhC,UAAU,yMAAwMsB,SAAA,EAElNxB,EAAAA,EAAAA,KAACmC,EAAAA,EAAe,CAACC,KAAME,EAAAA,OACvBtC,EAAAA,EAAAA,KAAA,QAAAwB,SAAM,wBA1ECG,KA+Ed,EC9CP,EAjDqBY,KACnB,MAAO/B,EAAQgC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,IAE7B,QAAEK,IAAYC,EAAAA,EAAAA,MA4BpB,OA1BAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAa,IAAIC,gBAoBvB,OAlBAC,iBACE,IACER,GAAW,GACXE,GAAS,GACT,MAAMO,QAAkBC,EAAAA,EAAAA,IAAgBP,EAAS,CAC/CQ,OAAQL,EAAWK,SAErBd,EAAUY,EAOZ,CANE,MAAOR,GACY,iBAAfA,EAAMW,MACRV,GAAS,EAEb,CAAC,QACCF,GAAW,EACb,CACF,CAEAa,GACO,KACLP,EAAWQ,OAAO,CACnB,GACA,CAACX,KAGF9C,EAAAA,EAAAA,KAAA,QAAAwB,UACEF,EAAAA,EAAAA,MAAA,OAAKpB,UAAU,YAAWsB,SAAA,CACvBkB,IAAW1C,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,IAClBd,GACCe,EAAAA,GAAAA,MAAa,sDACdnD,IAAUR,EAAAA,EAAAA,KAAC4D,EAAgB,CAACpD,OAAQA,KACrCR,EAAAA,EAAAA,KAAC6D,EAAAA,SAAQ,CAACC,UAAU9D,EAAAA,EAAAA,KAAC0D,EAAAA,EAAM,IAAIlC,UAC7BxB,EAAAA,EAAAA,KAAC+D,EAAAA,GAAM,OAET/D,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACC,UAAW,IAAMC,MAAM,gBAEpC,C,iFCpDX,MAAMC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,IAAKF,GAKA,MAAMG,EAAsBnB,iBAAwB,IAAjBoB,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClD,MAAMG,QAAiBP,EAAAA,EAAAA,IACpB,+BAA8BD,IAC/BI,GAEF,OAAOI,EAASC,IAClB,EAIavB,EAAkBF,eAAOL,GAA0B,IAAjByB,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,MAAMG,QAAiBP,EAAAA,EAAAA,IACpB,UAAStB,aAAmBqB,IAC7BI,GAEF,OAAOI,EAASC,IAClB,EAIaC,EAAqB1B,eAAO2B,GAAwB,IAAjBP,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxD,MAAMG,QAAiBP,EAAAA,EAAAA,IACpB,uBAAsBU,aAAiBX,IACxCI,GAEF,OAAOI,EAASC,IAClB,EAIaG,EAAc5B,eAAOL,GAA0B,IAAjByB,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnD,MAAMG,QAAiBP,EAAAA,EAAAA,IACpB,UAAStB,qBAA2BqB,IACrCI,GAEF,OAAOI,EAASC,IAClB,EAIaI,EAAY7B,eAAOL,GAA0B,IAAjByB,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAMG,QAAiBP,EAAAA,EAAAA,IACpB,UAAStB,qBAA2BqB,IACrCI,GAEF,OAAOI,EAASC,IAClB,C","sources":["components/MovieDetailsCard/MovieDeatailsCard.jsx","pages/MovieDetails.jsx","utils/Api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faComment } from '@fortawesome/free-solid-svg-icons';\nimport {\n  FaSadTear,\n  FaFrown,\n  FaMeh,\n  FaSmile,\n  FaLaughBeam,\n} from 'react-icons/fa';\n\nconst getEmojiForScore = score => {\n  if (score === 0 || score == null) return null; // Відсутній рейтинг\n  if (score >= 90) return <FaLaughBeam className=\"text-green-500\" />; // Дуже високий рейтинг\n  if (score >= 70) return <FaSmile className=\"text-green-400\" />; // Високий рейтинг\n  if (score >= 50) return <FaMeh className=\"text-yellow-500\" />; // Середній рейтинг\n  if (score >= 30) return <FaFrown className=\"text-orange-500\" />; // Низький рейтинг\n  return <FaSadTear className=\"text-red-500\" />; // Дуже низький рейтинг\n};\n\nconst MovieDetailsCard = ({ movies }) => {\n  const { title, poster_path, vote_average, overview, genres, release_date } =\n    movies;\n  const allGenres = genres ? genres.map(genre => genre.name).join(', ') : [];\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = { day: 'numeric', month: 'long', year: 'numeric' };\n    return date.toLocaleDateString('uk-UA', options);\n  };\n  const score = Math.round(vote_average * 10);\n  const defaultImg =\n    'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\n  const posterBasePath = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <>\n      <div className=\"md:flex justify-center gap-5 mb-5 p-5 max-w-screen-xl mx-auto\">\n        <div className=\"flex justify-center\">\n          <img\n            src={poster_path ? `${posterBasePath}${poster_path}` : defaultImg}\n            alt={title}\n            className=\"max-h-[350px] lg:max-h-[500px] object-cover rounded-lg\"\n          />\n        </div>\n        <div className=\"flex flex-col justify-center lg:justify-around gap-5 flex-1\">\n          <h2 className=\"text-center text-4xl font-bold lg:text-7xl\">\n            {title}\n          </h2>\n          <ul className=\"list-none p-0 m-0 text-center flex-col \">\n            <li className=\"flex justify-center sm:justify-start gap-2 mb-3 items-center\">\n              <h3 className=\"text-xl lg:text-3xl\">User score:</h3>\n              <p className=\"text-lg lg:text-3xl\">\n                {score > 0 ? `${score}%` : 'No rating yet'}\n              </p>\n              <p className=\"text-xl lg:text-2xl\">{getEmojiForScore(score)}</p>\n            </li>\n            <li className=\"flex flex-col items-start mb-3 sm:justify-start \">\n              <h3 className=\" text-xl font-bold lg:text-3xl\">\n                What the movie is about:\n              </h3>\n              <p className=\" text-lg lg:text-xl\">\n                {overview !== '' ? overview : 'No overview provided'}\n              </p>\n            </li>\n            <li className=\"flex justify-center sm:justify-start gap-2 mb-3\">\n              <h3 className=\" text-xl lg:text-2xl font-bold\">Genres:</h3>\n              <p className=\" text-lg lg:text-2xl\">\n                {allGenres !== '' ? allGenres : 'No genres provided'}\n              </p>\n            </li>\n            <li className=\"flex sm:justify-start gap-2 mb-3\">\n              <h3 className=\"text-xl lg:text-2xl font-bold\">Release Date:</h3>\n              <p className=\"text-lg lg:text-2xl\">\n                {release_date\n                  ? formatDate(release_date)\n                  : 'No release date yet'}\n              </p>\n            </li>{' '}\n          </ul>\n        </div>\n      </div>\n      <div className=\"flex justify-center mx-auto\">\n        <ul className=\"flex items-center gap-12 mb-12\">\n          <li>\n            <Link\n              to=\"cast\"\n              className=\"text-2xl border border-black rounded-lg py-1 px-6 font-semibold transition duration-250 ease-in-out hover:text-[#ff5733] hover:border-[#ff5733] no-underline duration-300  flex items-center space-x-2\"\n            >\n              <FontAwesomeIcon icon={faUser} />\n              <span>Cast</span>\n            </Link>\n          </li>\n          <li>\n            <Link\n              to=\"review\"\n              className=\"text-2xl border border-black rounded-lg py-1 px-6 font-semibold transition duration-250 ease-in-out hover:text-[#ff5733] hover:border-[#ff5733] no-underline duration-300  flex items-center space-x-2\"\n            >\n              <FontAwesomeIcon icon={faComment} />\n              <span>Review</span>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsCard;\n","import { useParams, Outlet } from 'react-router-dom';\nimport React, { useEffect, useState, Suspense } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport { fetchMoviesById } from '../utils/Api';\nimport Loader from '../components/Loader/Loader';\n\nimport MovieDetailsCard from 'components/MovieDetailsCard/MovieDeatailsCard';\n\nconst MovieDetails = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getMovieById() {\n      try {\n        setLoading(true);\n        setError(false);\n        const movieById = await fetchMoviesById(movieId, {\n          signal: controller.signal,\n        });\n        setMovies(movieById);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getMovieById();\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <main>\n      <div className=\"container\">\n        {loading && <Loader />}\n        {error &&\n          toast.error(`Oops, something went wrong. Try reloading the page`)}\n        {movies && <MovieDetailsCard movies={movies} />}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <ToastContainer autoClose={4000} theme=\"colored\" />\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["getEmojiForScore","score","_jsx","FaLaughBeam","className","FaSmile","FaMeh","FaFrown","FaSadTear","_ref","movies","title","poster_path","vote_average","overview","genres","release_date","allGenres","map","genre","name","join","Math","round","_jsxs","_Fragment","children","src","alt","dateString","Date","toLocaleDateString","day","month","year","Link","to","FontAwesomeIcon","icon","faUser","faComment","MovieDetails","setMovies","useState","loading","setLoading","error","setError","movieId","useParams","useEffect","controller","AbortController","async","movieById","fetchMoviesById","signal","code","getMovieById","abort","Loader","toast","MovieDetailsCard","Suspense","fallback","Outlet","ToastContainer","autoClose","theme","API_KEY","axios","key","fetchTrandingMovies","params","arguments","length","undefined","response","data","fetchMoviesByQuery","value","fetchReview","fetchCast"],"sourceRoot":""}