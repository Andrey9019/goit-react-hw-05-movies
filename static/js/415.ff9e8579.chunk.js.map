{"version":3,"file":"static/js/415.ff9e8579.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","utils/Api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst defaultImg =\n  'https://img.freepik.com/premium-vector/default-image-icon-vector-missing-picture-page-website-design-mobile-app-no-photo-available_87543-11093.jpg';\nconst posterBaseURL = 'https://image.tmdb.org/t/p/w500';\n\nconst genreNames = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  10751: 'Family',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  27: 'Horror',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <section className=\"container\">\n      <ul className=\"grid grid-cols-3 md:grid-cols-4 lg:grid-cols-[repeat(auto-fill,minmax(200px,1fr))] gap-4 p-3 list-none m-0\">\n        {movies.map(({ id, title, poster_path, vote_average, genre_ids }) => {\n          const allGenres = genre_ids\n            .map(id => genreNames[id])\n            .filter(Boolean)\n            .slice(0, 3)\n            .join(', ');\n\n          return (\n            <li\n              key={id}\n              className=\"relative rounded-md shadow-[0_2px_4px_rgba(0,0,0,0.3)] overflow-hidden transition-all duration-300 ease-in-out hover:shadow-[0_6px_8px_rgba(0,0,0,0.6)] hover:scale-105\"\n            >\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n                className=\"block h-full w-full text-inherit no-underline\"\n              >\n                <div>\n                  <img\n                    src={\n                      poster_path\n                        ? `${posterBaseURL}${poster_path}`\n                        : defaultImg\n                    }\n                    alt={title}\n                    width=\"200\"\n                    className=\"object-cover w-full\"\n                  />\n                  <div className=\"p-1 font-normal text-gray-700\">\n                    <p className=\"text-sm font-medium mb-1 md:text-lg lg:text-xl md:font-semibold\">\n                      {title}\n                    </p>\n                    {vote_average > 0 && (\n                      <p className=\"text-xs md:text-base lg:text-lg md:font-normal\">\n                        Rating: {vote_average.toFixed(1)}\n                      </p>\n                    )}\n                    {allGenres && (\n                      <p className=\"text-xs md:text-sm lg:text-base md:font-normal\">\n                        Genres: {allGenres}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default MoviesList;\n","import { fetchTrandingMovies } from '../utils/Api';\nimport { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Loader from '../components/Loader/Loader';\n\nconst Home = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getHomePageMovies() {\n      try {\n        setLoading(true);\n        setError(false);\n        const fetchHomePageMovies = await fetchTrandingMovies({\n          signal: controller.signal,\n        });\n        setMovies(fetchHomePageMovies.results);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          setError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getHomePageMovies();\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"text-4xl font-bold mt-2 mb-5 text-gray-800 text-center\">\n        Trending movies\n      </h1>\n\n      {loading && <Loader />}\n      {error &&\n        toast.error(`Oops, something went wrong. Try reloading the page`)}\n      <MoviesList movies={movies} />\n      <ToastContainer autoClose={4000} theme=\"colored\" />\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '345007f9ab440e5b86cef51be6397df1';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  key: API_KEY,\n};\n\n// пошук популярних фільмів\n\nexport const fetchTrandingMovies = async (params = {}) => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук фільмів по ID\n\nexport const fetchMoviesById = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// фільми на сторінці movie\n\nexport const fetchMoviesByQuery = async (value, params = {}) => {\n  const response = await axios.get(\n    `/search/movie?query=${value}&api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук ревью\n\nexport const fetchReview = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n\n// пошук акторів\n\nexport const fetchCast = async (movieId, params = {}) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    params\n  );\n  return response.data;\n};\n"],"names":["genreNames","_ref","movies","location","useLocation","_jsx","className","children","map","_ref2","id","title","poster_path","vote_average","genre_ids","allGenres","filter","Boolean","slice","join","Link","to","state","from","_jsxs","src","alt","width","toFixed","Home","loading","setLoading","useState","error","setError","setMovies","useEffect","controller","AbortController","async","fetchHomePageMovies","fetchTrandingMovies","signal","results","code","getHomePageMovies","abort","_Fragment","Loader","toast","MoviesList","ToastContainer","autoClose","theme","API_KEY","axios","key","params","arguments","length","undefined","response","data","fetchMoviesById","movieId","fetchMoviesByQuery","value","fetchReview","fetchCast"],"sourceRoot":""}